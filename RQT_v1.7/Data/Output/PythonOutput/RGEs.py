#####################################################################
#       This file was automatically generated by PyR@TE 3.
# It contains the expressions of the RGEs of the model 'SM'.
#####################################################################

import numpy as np

tr = lambda x: np.trace(x)
adjoint = lambda x: x.H
transpose = lambda x: x.transpose()
conjugate = lambda x: np.conjugate(x)


###################
# Gauge Couplings #
###################

def beta_g1(nLoop, g1,g2,g3,Yu,Yd,Ye,lambda_):
    if nLoop == 1:
        return (41/10)*g1**3
    if nLoop == 2:
        return (199/50)*g1**5 + (27/10)*g1**3*g2**2 + (44/5)*g1**3*g3**2 - 1/2*g1**3*tr(adjoint(Yd)*Yd) - 3/2*g1**3*tr(adjoint(Ye)*Ye) - 17/10*g1**3*tr(adjoint(Yu)*Yu)
    if nLoop == 3:
        return -388613/24000*g1**7 + (123/160)*g1**5*g2**2 - 137/75*g1**5*g3**2 + (27/50)*g1**5*lambda_ - 1267/800*g1**5*tr(adjoint(Yd)*Yd) - 2529/800*g1**5*tr(adjoint(Ye)*Ye) - 2827/800*g1**5*tr(adjoint(Yu)*Yu) + (789/64)*g1**3*g2**4 - 3/5*g1**3*g2**2*g3**2 + (9/10)*g1**3*g2**2*lambda_ - 1311/160*g1**3*g2**2*tr(adjoint(Yd)*Yd) - 1629/160*g1**3*g2**2*tr(adjoint(Ye)*Ye) - 471/32*g1**3*g2**2*tr(adjoint(Yu)*Yu) + (297/5)*g1**3*g3**4 - 17/5*g1**3*g3**2*tr(adjoint(Yd)*Yd) - 29/5*g1**3*g3**2*tr(adjoint(Yu)*Yu) - 9/5*g1**3*lambda_**2 + (51/40)*g1**3*tr(adjoint(Yd)*Yd)**2 + (157/20)*g1**3*tr(adjoint(Yd)*Yd)*tr(adjoint(Ye)*Ye) + (177/20)*g1**3*tr(adjoint(Yd)*Yd)*tr(adjoint(Yu)*Yu) + (99/40)*g1**3*tr(adjoint(Ye)*Ye)**2 + (199/20)*g1**3*tr(adjoint(Ye)*Ye)*tr(adjoint(Yu)*Yu) + (303/40)*g1**3*tr(adjoint(Yu)*Yu)**2 + (183/80)*g1**3*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd) + (261/80)*g1**3*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye) + (3/8)*g1**3*tr(adjoint(Yu)*Yd*adjoint(Yd)*Yu) + (339/80)*g1**3*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu)

def beta_g2(nLoop, g2,g1,g3,Yu,Yd,Ye,lambda_):
    if nLoop == 1:
        return -19/6*g2**3
    if nLoop == 2:
        return (9/10)*g1**2*g2**3 + (35/6)*g2**5 + 12*g2**3*g3**2 - 3/2*g2**3*tr(adjoint(Yd)*Yd) - 1/2*g2**3*tr(adjoint(Ye)*Ye) - 3/2*g2**3*tr(adjoint(Yu)*Yu)
    if nLoop == 3:
        return -5597/1600*g1**4*g2**3 + (873/160)*g1**2*g2**5 - 1/5*g1**2*g2**3*g3**2 + (3/10)*g1**2*g2**3*lambda_ - 533/160*g1**2*g2**3*tr(adjoint(Yd)*Yd) - 51/32*g1**2*g2**3*tr(adjoint(Ye)*Ye) - 593/160*g1**2*g2**3*tr(adjoint(Yu)*Yu) + (324953/1728)*g2**7 + 39*g2**5*g3**2 + (3/2)*g2**5*lambda_ - 729/32*g2**5*tr(adjoint(Yd)*Yd) - 243/32*g2**5*tr(adjoint(Ye)*Ye) - 729/32*g2**5*tr(adjoint(Yu)*Yu) + 81*g2**3*g3**4 - 7*g2**3*g3**2*tr(adjoint(Yd)*Yd) - 7*g2**3*g3**2*tr(adjoint(Yu)*Yu) - 3*g2**3*lambda_**2 + (45/8)*g2**3*tr(adjoint(Yd)*Yd)**2 + (15/4)*g2**3*tr(adjoint(Yd)*Yd)*tr(adjoint(Ye)*Ye) + (45/4)*g2**3*tr(adjoint(Yd)*Yd)*tr(adjoint(Yu)*Yu) + (5/8)*g2**3*tr(adjoint(Ye)*Ye)**2 + (15/4)*g2**3*tr(adjoint(Ye)*Ye)*tr(adjoint(Yu)*Yu) + (45/8)*g2**3*tr(adjoint(Yu)*Yu)**2 + (57/16)*g2**3*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd) + (19/16)*g2**3*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye) + (27/8)*g2**3*tr(adjoint(Yu)*Yd*adjoint(Yd)*Yu) + (57/16)*g2**3*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu)

def beta_g3(nLoop, g3,g1,g2,Yu,Yd,Ye):
    if nLoop == 1:
        return -7*g3**3
    if nLoop == 2:
        return (11/10)*g1**2*g3**3 + (9/2)*g2**2*g3**3 - 26*g3**5 - 2*g3**3*tr(adjoint(Yd)*Yd) - 2*g3**3*tr(adjoint(Yu)*Yu)
    if nLoop == 3:
        return -523/120*g1**4*g3**3 - 3/40*g1**2*g2**2*g3**3 + (77/15)*g1**2*g3**5 - 89/40*g1**2*g3**3*tr(adjoint(Yd)*Yd) - 101/40*g1**2*g3**3*tr(adjoint(Yu)*Yu) + (109/8)*g2**4*g3**3 + 21*g2**2*g3**5 - 93/8*g2**2*g3**3*tr(adjoint(Yd)*Yd) - 93/8*g2**2*g3**3*tr(adjoint(Yu)*Yu) + (65/2)*g3**7 - 40*g3**5*tr(adjoint(Yd)*Yd) - 40*g3**5*tr(adjoint(Yu)*Yu) + (21/2)*g3**3*tr(adjoint(Yd)*Yd)**2 + (7/2)*g3**3*tr(adjoint(Yd)*Yd)*tr(adjoint(Ye)*Ye) + 21*g3**3*tr(adjoint(Yd)*Yd)*tr(adjoint(Yu)*Yu) + (7/2)*g3**3*tr(adjoint(Ye)*Ye)*tr(adjoint(Yu)*Yu) + (21/2)*g3**3*tr(adjoint(Yu)*Yu)**2 + (9/2)*g3**3*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd) - 3*g3**3*tr(adjoint(Yu)*Yd*adjoint(Yd)*Yu) + (9/2)*g3**3*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu)


####################
# Yukawa Couplings #
####################

def beta_Yu(nLoop, g1,g2,g3,Yu,Yd,Ye,lambda_):
    if nLoop == 1:
        return -17/20*g1**2*Yu - 9/4*g2**2*Yu - 8*g3**2*Yu + 3*tr(adjoint(Yd)*Yd)*Yu + tr(adjoint(Ye)*Ye)*Yu + 3*tr(adjoint(Yu)*Yu)*Yu - 3/2*Yd*adjoint(Yd)*Yu + (3/2)*Yu*adjoint(Yu)*Yu
    if nLoop == 2:
        return (1187/600)*g1**4*Yu - 9/20*g1**2*g2**2*Yu + (19/15)*g1**2*g3**2*Yu + (5/8)*g1**2*tr(adjoint(Yd)*Yd)*Yu + (15/8)*g1**2*tr(adjoint(Ye)*Ye)*Yu + (17/8)*g1**2*tr(adjoint(Yu)*Yu)*Yu - 43/80*g1**2*Yd*adjoint(Yd)*Yu + (223/80)*g1**2*Yu*adjoint(Yu)*Yu - 23/4*g2**4*Yu + 9*g2**2*g3**2*Yu + (45/8)*g2**2*tr(adjoint(Yd)*Yd)*Yu + (15/8)*g2**2*tr(adjoint(Ye)*Ye)*Yu + (45/8)*g2**2*tr(adjoint(Yu)*Yu)*Yu + (9/16)*g2**2*Yd*adjoint(Yd)*Yu + (135/16)*g2**2*Yu*adjoint(Yu)*Yu - 108*g3**4*Yu + 20*g3**2*tr(adjoint(Yd)*Yd)*Yu + 20*g3**2*tr(adjoint(Yu)*Yu)*Yu - 16*g3**2*Yd*adjoint(Yd)*Yu + 16*g3**2*Yu*adjoint(Yu)*Yu + 6*lambda_**2*Yu - 12*lambda_*Yu*adjoint(Yu)*Yu + (15/4)*tr(adjoint(Yd)*Yd)*Yd*adjoint(Yd)*Yu - 27/4*tr(adjoint(Yd)*Yd)*Yu*adjoint(Yu)*Yu + (5/4)*tr(adjoint(Ye)*Ye)*Yd*adjoint(Yd)*Yu - 9/4*tr(adjoint(Ye)*Ye)*Yu*adjoint(Yu)*Yu + (15/4)*tr(adjoint(Yu)*Yu)*Yd*adjoint(Yd)*Yu - 27/4*tr(adjoint(Yu)*Yu)*Yu*adjoint(Yu)*Yu - 27/4*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd)*Yu - 9/4*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye)*Yu + (3/2)*tr(adjoint(Yu)*Yd*adjoint(Yd)*Yu)*Yu - 27/4*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu)*Yu + (11/4)*Yd*adjoint(Yd)*Yd*adjoint(Yd)*Yu - Yd*adjoint(Yd)*Yu*adjoint(Yu)*Yu - 1/4*Yu*adjoint(Yu)*Yd*adjoint(Yd)*Yu + (3/2)*Yu*adjoint(Yu)*Yu*adjoint(Yu)*Yu

def beta_Yd(nLoop, g1,g2,g3,Yu,Yd,Ye,lambda_):
    if nLoop == 1:
        return -1/4*g1**2*Yd - 9/4*g2**2*Yd - 8*g3**2*Yd + 3*tr(adjoint(Yd)*Yd)*Yd + tr(adjoint(Ye)*Ye)*Yd + 3*tr(adjoint(Yu)*Yu)*Yd + (3/2)*Yd*adjoint(Yd)*Yd - 3/2*Yu*adjoint(Yu)*Yd
    if nLoop == 2:
        return -127/600*g1**4*Yd - 27/20*g1**2*g2**2*Yd + (31/15)*g1**2*g3**2*Yd + (5/8)*g1**2*tr(adjoint(Yd)*Yd)*Yd + (15/8)*g1**2*tr(adjoint(Ye)*Ye)*Yd + (17/8)*g1**2*tr(adjoint(Yu)*Yu)*Yd + (187/80)*g1**2*Yd*adjoint(Yd)*Yd - 79/80*g1**2*Yu*adjoint(Yu)*Yd - 23/4*g2**4*Yd + 9*g2**2*g3**2*Yd + (45/8)*g2**2*tr(adjoint(Yd)*Yd)*Yd + (15/8)*g2**2*tr(adjoint(Ye)*Ye)*Yd + (45/8)*g2**2*tr(adjoint(Yu)*Yu)*Yd + (135/16)*g2**2*Yd*adjoint(Yd)*Yd + (9/16)*g2**2*Yu*adjoint(Yu)*Yd - 108*g3**4*Yd + 20*g3**2*tr(adjoint(Yd)*Yd)*Yd + 20*g3**2*tr(adjoint(Yu)*Yu)*Yd + 16*g3**2*Yd*adjoint(Yd)*Yd - 16*g3**2*Yu*adjoint(Yu)*Yd + 6*lambda_**2*Yd - 12*lambda_*Yd*adjoint(Yd)*Yd - 27/4*tr(adjoint(Yd)*Yd)*Yd*adjoint(Yd)*Yd + (15/4)*tr(adjoint(Yd)*Yd)*Yu*adjoint(Yu)*Yd - 9/4*tr(adjoint(Ye)*Ye)*Yd*adjoint(Yd)*Yd + (5/4)*tr(adjoint(Ye)*Ye)*Yu*adjoint(Yu)*Yd - 27/4*tr(adjoint(Yu)*Yu)*Yd*adjoint(Yd)*Yd + (15/4)*tr(adjoint(Yu)*Yu)*Yu*adjoint(Yu)*Yd - 27/4*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd)*Yd - 9/4*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye)*Yd + (3/2)*tr(adjoint(Yu)*Yd*adjoint(Yd)*Yu)*Yd - 27/4*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu)*Yd + (3/2)*Yd*adjoint(Yd)*Yd*adjoint(Yd)*Yd - 1/4*Yd*adjoint(Yd)*Yu*adjoint(Yu)*Yd - Yu*adjoint(Yu)*Yd*adjoint(Yd)*Yd + (11/4)*Yu*adjoint(Yu)*Yu*adjoint(Yu)*Yd

def beta_Ye(nLoop, g1,g2,Yu,Yd,Ye,g3,lambda_):
    if nLoop == 1:
        return -9/4*g1**2*Ye - 9/4*g2**2*Ye + 3*tr(adjoint(Yd)*Yd)*Ye + tr(adjoint(Ye)*Ye)*Ye + 3*tr(adjoint(Yu)*Yu)*Ye + (3/2)*Ye*adjoint(Ye)*Ye
    if nLoop == 2:
        return (1371/200)*g1**4*Ye + (27/20)*g1**2*g2**2*Ye + (5/8)*g1**2*tr(adjoint(Yd)*Yd)*Ye + (15/8)*g1**2*tr(adjoint(Ye)*Ye)*Ye + (17/8)*g1**2*tr(adjoint(Yu)*Yu)*Ye + (387/80)*g1**2*Ye*adjoint(Ye)*Ye - 23/4*g2**4*Ye + (45/8)*g2**2*tr(adjoint(Yd)*Yd)*Ye + (15/8)*g2**2*tr(adjoint(Ye)*Ye)*Ye + (45/8)*g2**2*tr(adjoint(Yu)*Yu)*Ye + (135/16)*g2**2*Ye*adjoint(Ye)*Ye + 20*g3**2*tr(adjoint(Yd)*Yd)*Ye + 20*g3**2*tr(adjoint(Yu)*Yu)*Ye + 6*lambda_**2*Ye - 12*lambda_*Ye*adjoint(Ye)*Ye - 27/4*tr(adjoint(Yd)*Yd)*Ye*adjoint(Ye)*Ye - 9/4*tr(adjoint(Ye)*Ye)*Ye*adjoint(Ye)*Ye - 27/4*tr(adjoint(Yu)*Yu)*Ye*adjoint(Ye)*Ye - 27/4*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd)*Ye - 9/4*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye)*Ye + (3/2)*tr(adjoint(Yu)*Yd*adjoint(Yd)*Yu)*Ye - 27/4*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu)*Ye + (3/2)*Ye*adjoint(Ye)*Ye*adjoint(Ye)*Ye


#####################
# Quartic Couplings #
#####################

def beta_lambda_(nLoop, g1,g2,Yu,Yd,Ye,lambda_,g3):
    if nLoop == 1:
        return (27/200)*g1**4 + (9/20)*g1**2*g2**2 - 9/5*g1**2*lambda_ + (9/8)*g2**4 - 9*g2**2*lambda_ + 24*lambda_**2 + 12*lambda_*tr(adjoint(Yd)*Yd) + 4*lambda_*tr(adjoint(Ye)*Ye) + 12*lambda_*tr(adjoint(Yu)*Yu) - 6*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd) - 2*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye) - 6*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu)
    if nLoop == 2:
        return -3411/2000*g1**6 - 1677/400*g1**4*g2**2 + (1887/200)*g1**4*lambda_ + (9/20)*g1**4*tr(adjoint(Yd)*Yd) - 9/4*g1**4*tr(adjoint(Ye)*Ye) - 171/100*g1**4*tr(adjoint(Yu)*Yu) - 289/80*g1**2*g2**4 + (117/20)*g1**2*g2**2*lambda_ + (27/10)*g1**2*g2**2*tr(adjoint(Yd)*Yd) + (33/10)*g1**2*g2**2*tr(adjoint(Ye)*Ye) + (63/10)*g1**2*g2**2*tr(adjoint(Yu)*Yu) + (108/5)*g1**2*lambda_**2 + (5/2)*g1**2*lambda_*tr(adjoint(Yd)*Yd) + (15/2)*g1**2*lambda_*tr(adjoint(Ye)*Ye) + (17/2)*g1**2*lambda_*tr(adjoint(Yu)*Yu) + (4/5)*g1**2*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd) - 12/5*g1**2*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye) - 8/5*g1**2*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu) + (305/16)*g2**6 - 73/8*g2**4*lambda_ - 9/4*g2**4*tr(adjoint(Yd)*Yd) - 3/4*g2**4*tr(adjoint(Ye)*Ye) - 9/4*g2**4*tr(adjoint(Yu)*Yu) + 108*g2**2*lambda_**2 + (45/2)*g2**2*lambda_*tr(adjoint(Yd)*Yd) + (15/2)*g2**2*lambda_*tr(adjoint(Ye)*Ye) + (45/2)*g2**2*lambda_*tr(adjoint(Yu)*Yu) + 80*g3**2*lambda_*tr(adjoint(Yd)*Yd) + 80*g3**2*lambda_*tr(adjoint(Yu)*Yu) - 32*g3**2*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd) - 32*g3**2*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu) - 312*lambda_**3 - 144*lambda_**2*tr(adjoint(Yd)*Yd) - 48*lambda_**2*tr(adjoint(Ye)*Ye) - 144*lambda_**2*tr(adjoint(Yu)*Yu) - 3*lambda_*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd) - lambda_*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye) - 42*lambda_*tr(adjoint(Yu)*Yd*adjoint(Yd)*Yu) - 3*lambda_*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu) + 30*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd*adjoint(Yd)*Yd) + 10*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye*adjoint(Ye)*Ye) - 6*tr(adjoint(Yu)*Yd*adjoint(Yd)*Yd*adjoint(Yd)*Yu) - 6*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yd*adjoint(Yd)*Yu) + 30*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu*adjoint(Yu)*Yu)


#########################
# Scalar Mass Couplings #
#########################

def beta_mu(nLoop, g1,g2,Yu,Yd,Ye,lambda_,mu,g3):
    if nLoop == 1:
        return -9/10*g1**2*mu - 9/2*g2**2*mu + 12*lambda_*mu + 6*mu*tr(adjoint(Yd)*Yd) + 2*mu*tr(adjoint(Ye)*Ye) + 6*mu*tr(adjoint(Yu)*Yu)
    if nLoop == 2:
        return (1671/400)*g1**4*mu + (9/8)*g1**2*g2**2*mu + (72/5)*g1**2*lambda_*mu + (5/4)*g1**2*mu*tr(adjoint(Yd)*Yd) + (15/4)*g1**2*mu*tr(adjoint(Ye)*Ye) + (17/4)*g1**2*mu*tr(adjoint(Yu)*Yu) - 145/16*g2**4*mu + 72*g2**2*lambda_*mu + (45/4)*g2**2*mu*tr(adjoint(Yd)*Yd) + (15/4)*g2**2*mu*tr(adjoint(Ye)*Ye) + (45/4)*g2**2*mu*tr(adjoint(Yu)*Yu) + 40*g3**2*mu*tr(adjoint(Yd)*Yd) + 40*g3**2*mu*tr(adjoint(Yu)*Yu) - 60*lambda_**2*mu - 72*lambda_*mu*tr(adjoint(Yd)*Yd) - 24*lambda_*mu*tr(adjoint(Ye)*Ye) - 72*lambda_*mu*tr(adjoint(Yu)*Yu) - 27/2*mu*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd) - 9/2*mu*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye) - 21*mu*tr(adjoint(Yu)*Yd*adjoint(Yd)*Yu) - 27/2*mu*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu)


#############################
# Vacuum-expectation Values #
#############################

def beta_v(nLoop, g1,g2,Yu,Yd,Ye,v,xiGauge,g3,lambda_):
    if nLoop == 1:
        return (3/20)*xiGauge*g1**2*v + (3/4)*xiGauge*g2**2*v + (9/20)*g1**2*v + (9/4)*g2**2*v - 3*v*tr(adjoint(Yd)*Yd) - v*tr(adjoint(Ye)*Ye) - 3*v*tr(adjoint(Yu)*Yu)
    if nLoop == 2:
        return (9/200)*xiGauge**2*g1**4*v + (9/20)*xiGauge**2*g1**2*g2**2*v + (9/200)*xiGauge*g1**4*v + (9/20)*xiGauge*g1**2*g2**2*v - 9/10*xiGauge*g1**2*v*tr(adjoint(Yd)*Yd) - 3/10*xiGauge*g1**2*v*tr(adjoint(Ye)*Ye) - 9/10*xiGauge*g1**2*v*tr(adjoint(Yu)*Yu) + (27/8)*xiGauge*g2**4*v - 9/2*xiGauge*g2**2*v*tr(adjoint(Yd)*Yd) - 3/2*xiGauge*g2**2*v*tr(adjoint(Ye)*Ye) - 9/2*xiGauge*g2**2*v*tr(adjoint(Yu)*Yu) - 1293/800*g1**4*v - 27/80*g1**2*g2**2*v - 5/8*g1**2*v*tr(adjoint(Yd)*Yd) - 15/8*g1**2*v*tr(adjoint(Ye)*Ye) - 17/8*g1**2*v*tr(adjoint(Yu)*Yu) + (271/32)*g2**4*v - 45/8*g2**2*v*tr(adjoint(Yd)*Yd) - 15/8*g2**2*v*tr(adjoint(Ye)*Ye) - 45/8*g2**2*v*tr(adjoint(Yu)*Yu) - 20*g3**2*v*tr(adjoint(Yd)*Yd) - 20*g3**2*v*tr(adjoint(Yu)*Yu) - 6*lambda_**2*v + (27/4)*v*tr(adjoint(Yd)*Yd*adjoint(Yd)*Yd) + (9/4)*v*tr(adjoint(Ye)*Ye*adjoint(Ye)*Ye) - 3/2*v*tr(adjoint(Yu)*Yd*adjoint(Yd)*Yu) + (27/4)*v*tr(adjoint(Yu)*Yu*adjoint(Yu)*Yu)